---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: featuregroups.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: FeatureGroup
    listKind: FeatureGroupList
    plural: featuregroups
    singular: featuregroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.failureReason
      name: FAILURE-REASON
      priority: 1
      type: string
    - jsonPath: .status.featureGroupStatus
      name: STATUS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FeatureGroup is the Schema for the FeatureGroups API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              FeatureGroupSpec defines the desired state of FeatureGroup.

              Amazon SageMaker Feature Store stores features in a collection called Feature
              Group. A Feature Group can be visualized as a table which has rows, with
              a unique identifier for each row where each column in the table is a feature.
              In principle, a Feature Group is composed of features and values per features.
            properties:
              description:
                type: string
              eventTimeFeatureName:
                type: string
              featureDefinitions:
                items:
                  description: |-
                    A list of features. You must include FeatureName and FeatureType. Valid feature
                    FeatureTypes are Integral, Fractional and String.
                  properties:
                    collectionConfig:
                      description: Configuration for your collection.
                      properties:
                        vectorConfig:
                          description: Configuration for your vector collection type.
                          properties:
                            dimension:
                              format: int64
                              type: integer
                          type: object
                      type: object
                    collectionType:
                      type: string
                    featureName:
                      type: string
                    featureType:
                      type: string
                  type: object
                type: array
              featureGroupName:
                type: string
              offlineStoreConfig:
                description: |-
                  The configuration of an OfflineStore.

                  Provide an OfflineStoreConfig in a request to CreateFeatureGroup to create
                  an OfflineStore.

                  To encrypt an OfflineStore using at rest data encryption, specify Amazon
                  Web Services Key Management Service (KMS) key ID, or KMSKeyId, in S3StorageConfig.
                properties:
                  dataCatalogConfig:
                    description: The meta data of the Glue table which serves as data
                      catalog for the OfflineStore.
                    properties:
                      catalog:
                        type: string
                      database:
                        type: string
                      tableName:
                        type: string
                    type: object
                  disableGlueTableCreation:
                    type: boolean
                  s3StorageConfig:
                    description: |-
                      The Amazon Simple Storage (Amazon S3) location and security configuration
                      for OfflineStore.
                    properties:
                      kmsKeyID:
                        type: string
                      resolvedOutputS3URI:
                        type: string
                      s3URI:
                        type: string
                    type: object
                type: object
              onlineStoreConfig:
                description: |-
                  Use this to specify the Amazon Web Services Key Management Service (KMS)
                  Key ID, or KMSKeyId, for at rest data encryption. You can turn OnlineStore
                  on or off by specifying the EnableOnlineStore flag at General Assembly.

                  The default value is False.
                properties:
                  enableOnlineStore:
                    type: boolean
                  securityConfig:
                    description: The security configuration for OnlineStore.
                    properties:
                      kmsKeyID:
                        type: string
                    type: object
                  storageType:
                    type: string
                  ttlDuration:
                    description: |-
                      Time to live duration, where the record is hard deleted after the expiration
                      time is reached; ExpiresAt = EventTime + TtlDuration. For information on
                      HardDelete, see the DeleteRecord (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_feature_store_DeleteRecord.html)
                      API in the Amazon SageMaker API Reference guide.
                    properties:
                      unit:
                        type: string
                      value:
                        format: int64
                        type: integer
                    type: object
                type: object
              recordIdentifierFeatureName:
                type: string
              roleARN:
                type: string
              tags:
                items:
                  description: |-
                    A tag object that consists of a key and an optional value, used to manage
                    metadata for SageMaker Amazon Web Services resources.

                    You can add tags to notebook instances, training jobs, hyperparameter tuning
                    jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations,
                    and endpoints. For more information on adding tags to SageMaker resources,
                    see AddTags (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AddTags.html).

                    For more information on adding metadata to your Amazon Web Services resources
                    with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
                    For advice on best practices for managing Amazon Web Services resources with
                    tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services
                    Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              throughputConfig:
                description: |-
                  Used to set feature group throughput configuration. There are two modes:
                  ON_DEMAND and PROVISIONED. With on-demand mode, you are charged for data
                  reads and writes that your application performs on your feature group. You
                  do not need to specify read and write throughput because Feature Store accommodates
                  your workloads as they ramp up and down. You can switch a feature group to
                  on-demand only once in a 24 hour period. With provisioned throughput mode,
                  you specify the read and write capacity per second that you expect your application
                  to require, and you are billed based on those limits. Exceeding provisioned
                  throughput will result in your requests being throttled.

                  Note: PROVISIONED throughput mode is supported only for feature groups that
                  are offline-only, or use the Standard (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_OnlineStoreConfig.html#sagemaker-Type-OnlineStoreConfig-StorageType)
                  tier online store.
                properties:
                  provisionedReadCapacityUnits:
                    format: int64
                    type: integer
                  provisionedWriteCapacityUnits:
                    format: int64
                    type: integer
                  throughputMode:
                    type: string
                type: object
            required:
            - eventTimeFeatureName
            - featureDefinitions
            - featureGroupName
            - recordIdentifierFeatureName
            type: object
          status:
            description: FeatureGroupStatus defines the observed state of FeatureGroup
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureReason:
                description: |-
                  The reason that the FeatureGroup failed to be replicated in the OfflineStore.
                  This is failure can occur because:

                     * The FeatureGroup could not be created in the OfflineStore.

                     * The FeatureGroup could not be deleted from the OfflineStore.
                type: string
              featureGroupStatus:
                description: The status of the feature group.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
